<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shiny on Kevin L. McKee</title>
    <link>http://localhost:1313/tags/shiny/</link>
    <description>Recent content in Shiny on Kevin L. McKee</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>kmckee90@gmail.com</managingEditor>
    <webMaster>kmckee90@gmail.com</webMaster>
    <lastBuildDate>Thu, 22 Jul 2021 08:14:27 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unsupervised learning in a spiking neural net</title>
      <link>http://localhost:1313/posts/rsnnshiny/</link>
      <pubDate>Thu, 22 Jul 2021 08:14:27 +0000</pubDate><author>kmckee90@gmail.com</author>
      <guid>http://localhost:1313/posts/rsnnshiny/</guid>
      <description>&lt;p&gt;As an exercise, I wrote a spiking neural network in R, implemented in a shiny app, that performs some rudimentary unsupervised learning. The app is embedded below. A small set of patterns is used to generate an input spike sequence, and a single hidden layer of spiking neurons uses a leaky integrate and fire (LIF) model with spike-timing dependent plasticity (STDP) to learn the underlying pattern components. The hidden layer uses lateral inhibition, or inhibitory connections among hidden layer neurons, to sparsify the solution.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
